<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Category list is empty" xml:space="preserve">
    <value>Список категорій порожній</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редагувати</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Продукти</value>
  </data>
  <data name="About Brand" xml:space="preserve">
    <value>Про Бренд</value>
  </data>
  <data name="Frequently asked questions" xml:space="preserve">
    <value>Поширені питання</value>
  </data>
  <data name="Popular" xml:space="preserve">
    <value>Популярне</value>
  </data>
  <data name="Catalogue" xml:space="preserve">
    <value>Каталог</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Ім'я</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Замовлення</value>
  </data>
  <data name="Delivery and Payment" xml:space="preserve">
    <value>Доставка і Оплата</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Всі</value>
  </data>
  <data name="str1" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Головна</value>
  </data>
  <data name="Cart" xml:space="preserve">
    <value>Кошик</value>
  </data>
  <data name="Goods" xml:space="preserve">
    <value>Товари</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Ціна</value>
  </data>
  <data name="Create Order" xml:space="preserve">
    <value>Створити замовлення</value>
  </data>
  <data name="Your cart is empty" xml:space="preserve">
    <value>Ваш кошик порожній</value>
  </data>
  <data name="Continue shopping or look at the section of the site that interests you" xml:space="preserve">
    <value>Продовжте покупки або подивіться цікавий для вас розділ сайту!</value>
  </data>
  <data name="Total Price" xml:space="preserve">
    <value>Загальна ціна</value>
  </data>
  <data name="Placing an order" xml:space="preserve">
    <value>Оформлення замовлення</value>
  </data>
  <data name="Your data" xml:space="preserve">
    <value>Ваші дані</value>
  </data>
  <data name="Your surname name" xml:space="preserve">
    <value>Ваше прізвище</value>
  </data>
  <data name="Your name" xml:space="preserve">
    <value>Ваше ім’я</value>
  </data>
  <data name="Your father name" xml:space="preserve">
    <value>Ваше ім'я по батькові</value>
  </data>
  <data name="Phone number" xml:space="preserve">
    <value>Телефоний номер</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Eлектронна пошта</value>
  </data>
  <data name="Contact me" xml:space="preserve">
    <value>Зв'язатись зі мною</value>
  </data>
  <data name="Notes to the order" xml:space="preserve">
    <value>Примітки до замовлення</value>
  </data>
  <data name="Delivery" xml:space="preserve">
    <value>Доставка</value>
  </data>
  <data name="In the Nova Poshta branch" xml:space="preserve">
    <value>У відділенні Нової Пошти</value>
  </data>
  <data name="Courier of Nova Poshta" xml:space="preserve">
    <value>Кур'єр Нової Пошти</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Місто</value>
  </data>
  <data name="Choose a post office" xml:space="preserve">
    <value>Обрати відділення</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Адресса</value>
  </data>
  <data name="Pay online" xml:space="preserve">
    <value>Оплатити онлайн</value>
  </data>
  <data name="Payment by certificate" xml:space="preserve">
    <value>Оплата сертифікатом</value>
  </data>
  <data name="Email is Required" xml:space="preserve">
    <value>Електронна пошта обов’язкова</value>
  </data>
  <data name="Password is Required" xml:space="preserve">
    <value>Пароль обов'язковий</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>В наявності</value>
  </data>
  <data name="On request" xml:space="preserve">
    <value>Під замовлення</value>
  </data>
  <data name="Sort by" xml:space="preserve">
    <value>Сортувати</value>
  </data>
  <data name="By price in ascending order" xml:space="preserve">
    <value>По ціні по зростанню</value>
  </data>
  <data name="Price in descending order" xml:space="preserve">
    <value>По ціні по спаданню</value>
  </data>
  <data name="By novelty" xml:space="preserve">
    <value>По новизні</value>
  </data>
  <data name="Price Range" xml:space="preserve">
    <value>Діапазон цін</value>
  </data>
  <data name="Sales" xml:space="preserve">
    <value>Акції</value>
  </data>
  <data name="Sertificat" xml:space="preserve">
    <value>Сертифікат</value>
  </data>
</root>