@using Jewelery.localization;
@model Jewelery.ViewModels.DTO.Product.ProductCMSDTO
@{
    Layout = "~/Views/Shared/_LayoutCSM.cshtml";


}
<link rel="stylesheet" href="~/scss//AddProductStyle.css" />
<script src="~/js/CMS/ProductImageFunc.js"></script>
<script src="~/js/CMS/ProductAtributeFunc.js"></script>
<script src="~/js/CMS/CategoryDropList.js"></script>
<script src="~/js/CMS/ApplyProductForm.js"></script>
<script src="~/js/CMS/Product_PromotionDisplay.js"></script>
<script src="~/js/CMS/CSMEditAddProductChanger.js"></script>





<div class="AddProductPageContainer">
    @using (Html.BeginForm("AddProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data", id = "AddProductForm"  }))
    {
        
        
        <div class="FormContainer">
            <div class="ImageInputContainer PagePart" id="Head" data-url="@Url.Action("AddProduct", "Product")">
                <h4 class="HeaderSpanStyle">Фото</h4>
                <div class="Image_ContainerAndAddButton">
                    <div class="Image_Container" data-ImageCounter="0">
                        @for (int i = 0; i < Model.Images.Count; i++)
                        {
                            <div class="Image_group" id="Image_group_@i">
                                <div hidden>
                                    <label for="Images[@i].Product_id">Product_id</label>
                                    @Html.EditorFor(model => model.Images[i].Product_id);
                                </div>
                                <div hidden>
                                    <label for="Images[@i].Image_id">Image_id</label>
                                    @Html.EditorFor(model => model.Images[i].Image_id);
                                </div>
                                <div class="PreviewContainerForImage">
                                    <img src="#" alt="Image Preview @i" id="ImagePreview_@i">
                                </div>                                                        
                                <div class="Buttons">
                                    <button class="RemoveImageButton" type="button" onclick="RemoveImage(@i)">-</button>
                                    <button class="OpenImageButton" type="button" onclick="OpenModal(@i)">-</button>

                                </div>
                                <div class="ImageModal" data-imagemodalfor="@i">
                                    <div class="ImageModalContainer">
                                        <img class="ModalImagePreview" src="#" alt="Image Preview @i" id="ImageModalPreview_@i">
                                    </div>
                                    <div class="InputsModalContainer">
                                        <div class="AltTextImageContainer">
                                            <label for="Images[@i].Alt_text">Alt_text</label>
                                            @Html.EditorFor(model => model.Images[i].Alt_text);
                                        </div>
                                        <div class="ChooseNewInputImageContainer">
                                            <input type="file" accept="image/*" name="Images[@i].ImageFile" onchange="PreviewImage(event,@i)">
                                        </div>
                                    </div>
                                </div>

                            </div>
                        }
                    </div>
                    <div class="newImageInputContainer">
                        <button type="button" id="newImageInput" onclick="AddImageField(event)"> <div class="PlusCont"><i class="bi bi-plus-circle"></i></div>  </button>
                    </div>
                </div>

                
            </div>
            <hr/>
            <div class="ProductCredentials PagePart">
                <h4 class="HeaderSpanStyle">Основні деталі</h4>
                <div>
                    @Html.HiddenFor(model => model.Product_id)
                </div>            
                <div class="NameAndDescriptionSegment">
                    <div class="NameAndDescriptionLanguageContainer">
                        <div class="NameContainer">
                            <label class="LabelForInput" for="Name_UKR">Назва на Українській <span style="color: red;">*</span></label>
                            @Html.EditorFor(model => model.Name_UKR)
                        </div>
                        <div class="DescriptionContainer">
                            <label class="LabelForInput" for="Description_UKR">Опис на Українській <span style="color: red;">*</span></label>
                            @Html.TextAreaFor(model => model.Description_UKR, 0, 0, new { Class = "ProductDescription" })
                        </div>
                    </div>
                    <div class="NameAndDescriptionLanguageContainer">
                        <div class="NameContainer">
                            <label class="LabelForInput" for="Name_ENG">Назва на Англійській <span style="color: red;">*</span></label>
                            @Html.EditorFor(model => model.Name_ENG)
                        </div>
                        <div class="DescriptionContainer">
                            <label class="LabelForInput" for="Description_ENG">Опис на Англійській <span style="color: red;">*</span></label>
                            @Html.TextAreaFor(model => model.Description_ENG,0,0,new{ Class = "ProductDescription"})
                        </div>
                    </div>
                </div>
                <div class="CategoryAndSubCategorySegment">
                    <div class="CategorySelectContainer">
                        <label class="LabelForInput" for="Category_id">Категорія <span style="color: red;">*</span></label>
                        @*@Html.EditorFor(model => model.Category_id) @*Recode*@
                        <select class="SelectCategory" required name="Category_id" id="Category_id" onchange="GetSubCategory(event)">
                            <option class="SelectCategoryOption" value="" selected disabled>Вибирати категорію товару</option>
                        </select>
                    </div>
                    <div class="CategorySelectContainer">
                        <label class="LabelForInput" for="SubCategory_id">Під категорія</label>
                        @*@Html.EditorFor(model => model.SubCategory_id) @*Recode*@
                        <select class="SelectCategory" name="SubCategory_id" id="SubCategory_id">
                            <option class="SelectCategoryOption" value="" selected>Вибрати під категорію</option>
                        </select>
                    </div>
                </div> 

                <div class="ArticulSegment">
                    <label class="LabelForInput" for="Articul">Артикуль <span style="color: red;">*</span></label>
                    @Html.EditorFor(model => model.Articul)
                </div>           
            </div>

            <hr />
            <div class="ProductAtributes PagePart">
                <h4 class="HeaderSpanStyle">Атрибути</h4>
                <div class="AtributeSegment">
                    <div id="Atribute_Container" data-atributeCount="0">
                        @for(int i = 0; i < Model.Attributes.Count; i++)
                        {
                            <div class="Atribute_group" id="Atribute_group_@i">
                                <div class="AtributeCred">
                                    <div hidden>
                                        <label for="Attributes[i].Product_id">Product_id</label>
                                        @Html.EditorFor(model => model.Attributes[i].Product_id)
                                    </div>
                                    <div hidden>
                                        <label for="Attributes[i].Atribute_id">Atribute_id</label>
                                        @Html.EditorFor(model => model.Attributes[i].Atribute_id)
                                    </div>
                                    <div class="NameOfAtributeContainer">
                                        <div class="AtributeInputContainer AtributeInputTemplate">
                                            <label class="LabelForInput" for="">Назва атрибута на Українській</label>
                                            @Html.EditorFor(model => model.Attributes[i].Atribute_name_UKR)
                                        </div>
                                        <div class="AtributeInputContainer ">
                                            <label class="LabelForInput" for="">Назва атрибута на Англійській</label>
                                            @Html.EditorFor(model => model.Attributes[i].Atribute_name_ENG)
                                        </div>
                                    </div>
                                    <div class="UnitAndDetermineSizeContainer">
                                        <div class="AtributeInputContainer">
                                            <label class="LabelForInput" for="">Одиниця вимірювання</label>
                                            @Html.EditorFor(model => model.Attributes[i].Unit)
                                        </div>
                                        @await Component.InvokeAsync("DetermineSizeSelectForProduct", new { index = @i });
                                    </div>                                
                                </div>                            
                                <div class="Option_containerAndButton" >
                                    <div class="Option_container" id="Option_container_for_atribute_@i" data-OptionCount="0">
                                        @for (int x = 0; x < Model.Attributes[i].Options.Count; x++)
                                        {
                                            <div class="Option_group" id="Option_group_@x">
                                                <div class="PreviewOptionCircle" id="PreviewOptionCircle_@x">
                                                    <span>@Model.Attributes[i].Options[x].Size</span>
                                                    <span>@Model.Attributes[i].Unit</span>
                                                </div>
                                                <div class="OptionCred">
                                                    <div hidden>
                                                        <label for="Attributes[@i].Options[@x].Atribute_id">Atribute_id</label>
                                                        @Html.EditorFor(model => model.Attributes[i].Options[x].Atribute_id)
                                                    </div>
                                                    <div hidden>
                                                        <label for="Attributes[@i].Options[@x].Option_id">Option_id</label>
                                                        @Html.EditorFor(model => model.Attributes[i].Options[x].Option_id)
                                                    </div>
                                                    <div class="AtributeInputContainer">
                                                        <label for="Attributes[@i].Options[@x].Size">Size</label>
                                                        @Html.EditorFor(model => model.Attributes[i].Options[x].Size) Attributes[1].Options[2].Size
                                                    </div>
                                                    <div class="AtributeInputContainer">
                                                        <label for="Attributes[@i].Options[@x].PriceAdjustment">PriceAdjustment</label>
                                                        @Html.EditorFor(model => model.Attributes[i].Options[x].PriceAdjustment)
                                                    </div>
                                                </div>
                                                <div class="RemoveOptionButtonContainer">
                                                    <button type="button" onclick="RemoveOption(@x)">Delete Option</button>
                                                </div>


                                            </div>
                                        }
                                    </div>                                
                                    <div>
                                        <button type="button" onclick="AddOption(@i)">Add Option</button>
                                    </div>                            
                                </div>
                                <div>
                                    <button type="button" onclick="RemoveAtribute(@i)">Delete Atribute</button>
                                </div>                                                                                   
                            </div>                   
                        }                
                    
                    </div>
                    <div>
                        <button type="button" class="AddAtributeButton" onclick="AddAtribute()">+ Додати атрибут</button>
                    </div>
                </div>
            </div>
            @*
                public List<AtributeCMSDTO> Attributes { get; set; }
            *@
            <hr />
            <div class="ProductPriceAndPromotions PagePart">
                <h4 class="HeaderSpanStyle">Ціна і знижка</h4>
                <div class="PriceSegment">
                    <div class="PriceAndPromotioncheckBox">
                        <div class="PriceInput PriceSegmentInput">
                            <label class="LabelForInput" for="Price">Ціна в гривнях</label>
                            @Html.EditorFor(model => model.Price)
                        </div>
                        <div class="PriceInput">
                            @Html.EditorFor(model => model.isPromotion)
                            <label class="LabelForInput" for="isPromotion">Має знижку</label>
                        </div>
                    </div>
                    <div class="PromotionViewInputsAndChager" id="PromotionChangerInputContainer">
                        <div class="PricePromotinInputViewContainer PriceSegmentInput" id="PromotionInput">
                            <label class="LabelForInput" for="Promotion_Price">Акційна ціна:</label>
                            @Html.EditorFor(model => model.Promotion_Price, new { htmlAttributes = new { @readonly = "readonly" } })
                        </div>
                        <div class="PromotionChangerInputContainer" >
                            <div class="PromotionChangerContainer">
                                <label class="LabelForInput" for="PromotionChangerInput">Встановити знижку:</label>
                                <input id="PromotionChangerInput" type="number" min="0" />
                            </div>                        
                            <div class="CheckboxesInputChooserConteiner">
                                <div class="PrecentPromotionChangerContainer CheckboxPromotionChangerContainer">
                                    <input name="PromotionChanger" id="PrecentPromotionChanger" type="radio" checked />
                                    <label class="LabelForInput" for="PrecentPromotionChanger">-%</label>
                                </div>
                                <div class="NumberPromotionChangerContainer CheckboxPromotionChangerContainer">
                                    <input name="PromotionChanger" id="NumberPromotionChanger" type="radio" />
                                    <label class="LabelForInput" for="NumberPromotionChanger">-num</label>
                                </div>
                            </div>              
                        </div>
                    </div>     
                </div>
            </div>
            <div class="PagePart">
                <div>
                    <button type="submit">Add Product</button>
                </div>
                <div>
                    <label class="LabelForInput" for="isExist">В наявності</label>
                    @Html.EditorFor(model => model.isExist)
                </div>
                <div>
                    <label class="LabelForInput" for="isDisplay">Відображається на сайті</label>
                    @Html.EditorFor(model => model.isDisplay)
                </div>
            </div>
            
        </div>


    }
</div>
